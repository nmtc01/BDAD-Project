.mode columns
.headers on
PRAGMA foreign_keys=OFF;
drop table if exists FARMACIA;
drop table if exists FUNCIONARIO;
drop table if exists CLIENTE;
drop table if exists LABORATORIO;
drop table if exists HORARIO;
drop table if exists RECEITA;
drop table if exists PRODUTO;
drop table if exists STOCK;
drop table if exists QUANTIDADE;
drop table if exists VENDA;
drop table if exists VENDA_PRODUTO; 
PRAGMA foreign_keys=ON;

create table FARMACIA(
	idFarmacia INTEGER PRIMARY KEY,
	nome TEXT NOT NULL,
	morada TEXT NOT NULL UNIQUE,
	contacto INTEGER NOT NULL UNIQUE,
	CONSTRAINT CHK_FARMACIA CHECK (length(contacto)=9));

create table FUNCIONARIO(	
	idFuncionario INTEGER PRIMARY KEY NOT NULL,
	nifFuncionario INTEGER NOT NULL,
	nome TEXT NOT NULL,
	morada TEXT NOT NULL,
	dataNasc TEXT NOT NULL,
	cargo TEXT NOT NULL,
	salario REAL NOT NULL,
	idFarmacia INTEGER REFERENCES FARMACIA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	CONSTRAINT CHK_FUNCIONARIO CHECK (salario>=0 AND length(nifFuncionario)=9));

create table CLIENTE(
	idCliente INTEGER PRIMARY KEY NOT NULL,
	nifCliente INTEGER NOT NULL,
	nome TEXT NOT NULL,
	morada TEXT NOT NULL,
	dataNasc TEXT NOT NULL,
	profissao TEXT NOT NULL,
	idFarmacia INTEGER REFERENCES FARMACIA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	CHECK (length(nifCliente)=9));

create table LABORATORIO(
	idLaboratorio INTEGER PRIMARY KEY NOT NULL,
	nome TEXT NOT NULL,
	morada TEXT NOT NULL UNIQUE,
	contacto INTEGER NOT NULL UNIQUE,
	CONSTRAINT CHK_LABORATORIO CHECK (length(contacto)=9));

create table HORARIO(
	idHorario INTEGER PRIMARY KEY NOT NULL,
	dias TEXT NOT NULL,
	horaAbertura TEXT NOT NULL,
	horaFecho TEXT NOT NULL,
	idFarmacia INTEGER REFERENCES FARMACIA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

create table RECEITA(
	idReceita INTEGER PRIMARY KEY NOT NULL,
	dataReceita TEXT NOT NULL,
	medico TEXT NOT NULL,
	idCliente INTEGER REFERENCES CLIENTE ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);
	
create table PRODUTO(
	idProduto INTEGER PRIMARY KEY NOT NULL,
	nome TEXT NOT NULL,
	descricao TEXT,
	custo REAL NOT NULL,
	comparticipacao REAL NOT NULL,
	idLaboratorio INTEGER REFERENCES LABORATORIO ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	CONSTRAINT CHK_PRODUTO CHECK (custo>=0 AND comparticipacao>=0));

create table STOCK(
	idProduto INTEGER REFERENCES PRODUTO ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	idFarmacia INTEGER REFERENCES FARMACIA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	stock INTEGER NOT NULL,
	constraint id_STOCK PRIMARY KEY(idProduto,idFarmacia),
	CHECK (stock>=0));

create table QUANTIDADE(
	idProduto INTEGER REFERENCES PRODUTO ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	idReceita INTEGER REFERENCES RECEITA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	quantidade INTEGER NOT NULL,
	constraint id_QUANTIDADE PRIMARY KEY(idProduto,idReceita),
	CHECK (quantidade>0));

create table VENDA(
	idVenda INTEGER PRIMARY KEY,
	data_venda TEXT NOT NULL,
	hora TEXT NOT NULL,
	preco REAL NOT NULL,
	comReceita INTEGER NOT NULL,
	idFuncionario INTEGER REFERENCES FUNCIONARIO ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	idCliente INTEGER REFERENCES CLIENTE ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	idFarmacia INTEGER REFERENCES FARMACIA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	CONSTRAINT CHK_VENDA CHECK (preco>=0 AND comReceita<>'UNKNOWN' AND (comReceita=1 OR comReceita=0)));

create table VENDA_PRODUTO(
	idProduto INTEGER REFERENCES PRODUTO ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	idVenda INTEGER REFERENCES VENDA ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	quantidade INTEGER NOT NULL,
	CONSTRAINT id PRIMARY KEY(idProduto,idVenda));